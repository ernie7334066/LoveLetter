!function(e){var r={};function t(a){if(r[a])return r[a].exports;var n=r[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=r,t.d=function(e,r,a){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)t.d(a,n,function(r){return e[r]}.bind(null,n));return a},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=2)}([function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.cardRank={Guard:1,Priest:2,Baron:3,Handmaid:4,Prince:5,King:6,Countess:7,Princess:8},r.cardNames=["Guard","Priest","Baron","Handmaid","Prince","King","Countess","Princess"],r.initialState={counter:0,currentPlayerId:1,players:[{id:1,dead:!1,holdingCards:[],playedCards:[]},{id:2,dead:!1,holdingCards:[],playedCards:[]},{id:3,dead:!1,holdingCards:[],playedCards:[]},{id:4,dead:!1,holdingCards:[],playedCards:[]}],availableCards:{Guard:5,Priest:2,Baron:2,Handmaid:2,Prince:2,King:1,Countess:1,Princess:1},gameEnds:{winner:null}},r.nonAttackingCards=["Handmaid","Countess","King"],r.startingCards={Guard:5,Priest:2,Baron:2,Handmaid:2,Prince:2,King:1,Countess:1,Princess:1}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.counter=void 0;var a=t(0),n=t(3);function d(e,r){return Object.assign({},e,{players:(t=e.players,e.currentPlayerId,t.map(function(e,r){return e})),currentPlayerId:function(e,r){var t=e.length,a=r%t;for(;a===r-1;)a=(a+1)%t;return console.log("Next Player ID: "+a),e[a].id}(e.players,e.currentPlayerId)});var t}function i(e){return s(e,e.currentPlayerId)}function s(e,r){var t=(0,n.getRandomCard)(e.availableCards);return Object.assign({},e,{players:function(e,r,t){return e.map(function(e,a){if(e.id!==r)return e;var n=e.holdingCards;return n.push(t),Object.assign({},e,{holdingCards:n})})}(e.players,r,t)})}r.counter=function(e,r){if(void 0===e)return JSON.parse(JSON.stringify(a.initialState));switch(r.type){case"PLAY_CARD":var t=Object.assign({},e);!function(e,r,t){var a=e[r-1],n=a.holdingCards,d=n.indexOf(t.cardId);n.splice(d,1),a.playedCards.push(t)}(t.players,t.currentPlayerId,r.cardToPlay);var o=function(e,r){if(function(e){var r=0;for(var t in e)e.hasOwnProperty(t)&&(r+=e[t]);return r}(r)<=0||(0,n.getLivingPlayerSize)(e)<=1){var t=(0,n.calculateWinner)(e);return{gameEnd:!0,winnerId:t}}return{gameEnd:!1,winnerId:-1}}((t=d(t)).players,t.availableCards);return o.gameEnd&&(t.gameEnds.winner=t.players[o.winnerId-1]),t;case"DRAW_CARD":return i(e);case"RESTART":var l=JSON.parse(JSON.stringify(a.initialState));return(0,n.getRandomCard)(l.availableCards),l=i(l=s(l=s(l=s(l=s(l,1),2),3),4));default:return e}}},function(e,r,t){"use strict";var a=t(1),n=t(0),d=Redux.createStore(Redux.combineReducers({counter:a.counter}));function i(){if($("#currentPlayerId").text(d.getState().counter.currentPlayerId.toString()),null===d.getState().counter.gameEnds.winner&&d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards.length>0&&$("#playButton1").text(n.cardNames[d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards[0].toString()-1]),null===d.getState().counter.gameEnds.winner&&d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards.length>1&&$("#playButton2").text(n.cardNames[d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards[1].toString()-1]),null===d.getState().counter.gameEnds.winner){$("#playerPlayedList1").empty(),$("#playerPlayedList2").empty(),$("#playerPlayedList3").empty(),$("#playerPlayedList4").empty();for(var e=0;e<d.getState().counter.players[0].playedCards.length;++e)$("#playerPlayedList1").append('<li class="item">'+n.cardNames[d.getState().counter.players[0].playedCards[e].cardId-1]+"</li>");for(e=0;e<d.getState().counter.players[1].playedCards.length;++e)$("#playerPlayedList2").append('<li class="item">'+n.cardNames[d.getState().counter.players[1].playedCards[e].cardId-1]+"</li>");for(e=0;e<d.getState().counter.players[2].playedCards.length;++e)$("#playerPlayedList3").append('<li class="item">'+n.cardNames[d.getState().counter.players[2].playedCards[e].cardId-1]+"</li>");for(e=0;e<d.getState().counter.players[3].playedCards.length;++e)$("#playerPlayedList4").append('<li class="item">'+n.cardNames[d.getState().counter.players[3].playedCards[e].cardId-1]+"</li>")}null!==d.getState().counter.gameEnds.winner?$("#status").text("Winner is "+d.getState().counter.gameEnds.winner.id):$("#status").text("Player "+d.getState().counter.currentPlayerId+"'s turn.")}i(),d.subscribe(i),$("#playButton1").on("click",function(){d.dispatch({type:"PLAY_CARD",cardToPlay:{cardId:d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards[0],playAgainst:2,guardGuess:-1}}),d.dispatch({type:"DRAW_CARD",player:d.getState().counter.currentPlayerId})}),$("#playButton2").on("click",function(){d.dispatch({type:"PLAY_CARD",cardToPlay:{cardId:d.getState().counter.players[d.getState().counter.currentPlayerId-1].holdingCards[1],playAgainst:2,guardGuess:-1}}),d.dispatch({type:"DRAW_CARD",player:d.getState().counter.currentPlayerId})}),$("#restart").click(function(){console.log("Restart"),d.dispatch({type:"RESTART"})})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.nextPlayer=r.calculateWinner=r.getLivingPlayerSize=r.getNonDeadNonProtectedPlayers=r.getHighestNotYetAppearedCard=r.getAvailableCardSize=r.getRandomCard=r.checkGameEnd=r.compareCards=void 0;var a,n=t(4),d=((a=n)&&a.__esModule,t(0));function i(e){var r=0;for(var t in e)e.hasOwnProperty(t)&&(r+=e[t]);return r}var s=function(e,r){return d.cardRank[r]-d.cardRank[e]};function o(e){var r=0;return e.forEach(function(e){e.dead||r++}),r}function l(e){var r=-1;return e.forEach(function(t){t.dead||(-1==r?r=t.id:s(e[r-1].holdingCards[0],t.holdingCards[0])>0&&(r=t.id))}),r}r.compareCards=s,r.checkGameEnd=function(e,r){return i(r)<=0||o(e)<=1?{gameEnd:!0,winner:l(e)}:{gameEnd:!1,winner:-1}},r.getRandomCard=function(e){var r=i(e);if(console.log("Total Cards: "+r),0!=r){var t=Math.floor(Math.random()*r),a=0,n=void 0;for(var s in e)if(e.hasOwnProperty(s)&&(a+=e[s])>t){n=s;break}return console.log("Card drawed: "+n),e[n]--,d.cardRank[n]}},r.getAvailableCardSize=i,r.getHighestNotYetAppearedCard=function(e,r){for(var t=7;t>0;t--){var a=d.cardNames[t];if(0!==r[a]&&-1===e.indexOf(a))return a}return"Priest"},r.getNonDeadNonProtectedPlayers=function(e,r){var t=[];return r.forEach(function(r){r.number==e.number||r.protected||r.dead||t.push(r.number)}),t},r.getLivingPlayerSize=o,r.calculateWinner=l,r.nextPlayer=function(e,r){for(var t=e.length,a=r.number%t;1==e[a].dead;)a=(a+1)%t;return e[a]}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var a=function(){function e(e,r){for(var t=0;t<r.length;t++){var a=r[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(r,t,a){return t&&e(r.prototype,t),a&&e(r,a),r}}(),n=t(3);var d=function(){function e(r){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.number=r,this.dead=!1,this.protected=!1,this.cards=[]}return a(e,[{key:"draw",value:function(e){console.log("Draw a card for player "+this.number),this.cards.push((0,n.getRandomCard)(e))}},{key:"reset",value:function(){this.dead=!1,this.protected=!1,this.cards=[]}},{key:"showHand",value:function(){$("#playerTitle"+this.number).append(" - "+this.cards[0])}},{key:"setPlayerDead",value:function(e){this.dead=!0,$("#playerTitle"+this.number).attr("class","playerDead"),$("#playerTitle"+this.number).append(" - "+this.cards[0]),e[this.cards[0]]--}},{key:"randomAI",value:function(e,r){var t=void 0;t=-1!==this.cards.indexOf("Handmaid")?this.cards.indexOf("Handmaid"):(0,n.compareCards)(this.cards[0],this.cards[1])>0?0:1;var a=this.cards[t];console.log(a);var d=void 0;"Guard"===a&&(d=(0,n.getHighestNotYetAppearedCard)(this.cards,r));var i=this.number%4+1,s=(0,n.getNonDeadNonProtectedPlayers)(this,e);0==s.length||(i=s[Math.floor(Math.random()*s.length)]);return this.play(t,i,d)}},{key:"play",value:function(e,r,t){var a=this.cards[e];return this.cards.splice(e,1),{card:a,against:r,guess:t}}},{key:"discard",value:function(){console.log("Player "+this.number+" discarded a card.");var e=this.cards[0];return $("#playerPlayedList"+this.number).append('<li class="discard item">'+e+"</li>"),this.cards=[],e}}]),e}();r.default=d}]);
//# sourceMappingURL=main.bundle.js.map